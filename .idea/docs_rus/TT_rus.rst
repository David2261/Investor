==============================
Техническое задание по проекту
==============================

*Проект из себя представляет: блог про финансы и инвестиции, в котором можно создать статью, аккаунт, комментарий. Подписаться на рассылку, расчитать свой портфель, прочитать последние новости. Прочитать профиль писателя, увидеть последние награды за посты, комментарии, определенный срок использования приложением (сайтом). Также есть возможность забанить пользователя на определенный период (или на всегда). Можно мониторить активность пользователя, смотреть что он просматривал, что лайк, где больше уделял времени. Собирая данную статистику выводить, похожую тематику в ленту рекомендаций*

---------------------
1. Функционал проекта
---------------------
*Проект может изменять некоторые отдельные функции, но основная концепция, должна сохраниться*

* Создание статей (Название, текст, картинка, дата создания/обновления, публикция да/нет)
* Создание категорий статей
* Создание аккаунта (Авторизация, Регистрация, Выход, Сброс пароля, Удаление)
* Создание комментариев (Текст, Статья, Дата создания, Ник автора, картинка по желанию)
* Подписка на рассылку (Подписка и Возможность отказаться)
* Профиль пользователя (Ник, имя, почта, пароль, фото, последние посты, лайки, комментарии, о себе, хоббии, место работы)
* Контроль за пользователями (Возможность забанить на определенный период (или на всегда))
* Мониторинг активности пользователя (Кол-во проведенных на сайте (приложении), про лайканные статьи, сбор интересов)
* Лента рекомендаций (Суммирую все данные об пользователе создавать ленту рекомендаций исходя из 70% - интересующих его статьй, 30% - рандомных (или близко похожих) постов)

--------
2. Тесты
--------
* Сделать тесты статус-кодов страницы
* Сделать тесты для Базы данных: {
	1) Ввод данных
	2) Создание аккаунта
	3) Вход в аккаунт
	4) Выход из аккаунта
	5) Проверка написания статьи, для всех (обучение, мотивация, рекомендации)
}
* Проверка ссылок на страницы

--------
3. Coverage
--------

coverage run --source='.' manage.py test  Проверка покрытия кода (нужно после каждого изменения)
coverage html                             Для создания отчёта

-----------
4. База данных
-----------
*Нужно решить, какие виды запросов будут отправляться в БД и стоит ли сохранять данные в дополнительную БД. Как способ спрежения данных*

---
5. API
---
*Нужно создать api для передачи данных на frontend, но также важно решить стоит использовать REST или SDK*

-------
6. Админка
-------
*Нужно сделать dashboard для мониторинга активности и работы системы, также добавить api. Нужно посмотреть, как создается статистика просмотров статей и исходя из этого выпуска статьи, той или иной категории.*

------
7. Сервер
------
*Нужно написать сервер на nginx, выбрать место для облачного хранения, и выбрать хостинг для сайта*

