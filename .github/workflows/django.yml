name: Django CI
run-name: ${{ github.actor }} is testing out Github CI/CD

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  flake8:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
      - name: Install flake8
        run: |
          python -m pip install --upgrade pip
          pip install flake8
      - name: Run flake8
        run: flake8 .

  run_tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: ${{ vars.POSTGRES_DB }}
          POSTGRES_USER: ${{ vars.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repo code
        uses: actions/checkout@v3
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
      # Установка зависимостей
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Debug environment variables
        run: |
          printenv | sort  # Покажет все переменные окружения
        continue-on-error: true
      
        # Даем время запуститься
      - name: Wait for PostgreSQL
        run: sleep 10

      # Создание БД
      - name: Create test database
        run: |
          ${{ vars.POSTGRES_DB }} ${{ vars.POSTGRES_USER }} ${{ secrets.POSTGRES_PASSWORD }} ${{ vars.PGDATA }} psql -h localhost -U postgres -d postgres -c "CREATE DATABASE ih_data;"
  
      - name: Run Tests
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          FRONTEND_HOST: ${{ secrets.FRONTEND_HOST }}
          OAUTH_GOOGLE_CLIENTID: ${{ secrets.OAUTH_GOOGLE_CLIENTID }}
          OAUTH_GOOGLE_SECRET: ${{ secrets.OAUTH_GOOGLE_SECRET }}
          OAUTH_MICROSOFT_CLIENTID: ${{ secrets.OAUTH_MICROSOFT_CLIENTID }}
          OAUTH_MICROSOFT_SECRET: ${{ secrets.OAUTH_MICROSOFT_SECRET }}
          OAUTH_YANDEX_CLIENTID: ${{ secrets.OAUTH_YANDEX_CLIENTID }}
          OAUTH_YANDEX_SECRET: ${{ secrets.OAUTH_YANDEX_SECRET }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          REDIS_BROKER_URL: ${{ secrets.REDIS_BROKER_URL }}
          DEBUG: ${{ vars.DEBUG }}
          PGDATA: ${{ vars.PGDATA }}
        run: |
          mkdir -p /home/runner/work/Investor/Investor/__logs__
          touch /home/runner/work/Investor/Investor/__logs__/error.log
          chmod 777 -R .
          pytest --ff -v hello